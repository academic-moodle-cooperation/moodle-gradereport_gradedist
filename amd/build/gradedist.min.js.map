{"version":3,"file":"gradedist.min.js","sources":["../src/gradedist.js"],"sourcesContent":["// This file is part of mod_checkmark for Moodle - http://moodle.org/\n//\n// It is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// It is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * gradedist.js\n *\n * @package\n * @author    Andreas Krieger\n * @copyright 2014-2018 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n /**\n  * @module gradereport_gradedist/gradedist\n  */\n\ndefine(['jquery', 'core/log', 'core/str', 'gradereport_gradedist/config'],\nfunction($, log, str) {\n    /**\n     * @constructor\n     * @alias module:gradereport_gradedist/gradedist\n     */\n    var Gradedist = function() {\n    };\n\n    /*\n     * update() updates the chart according to the values currently set in the form\n     *\n     * @return true if everything's allright (no error handling by now)\n     */\n    Gradedist.prototype.update = function(o) {\n\n        var data = JSON.parse(o.responseText);\n\n        if (data.updateall == 1) {\n            window.absolut = [];\n            window.percent = [];\n\n            $.map(data.letters, function(letter) {\n                window.absolut.push(data.actdist[letter].count);\n                window.percent.push(data.actdist[letter].percentage);\n            });\n\n            var values = (window.mode == 1) ? window.percent : window.absolut;\n\n            window.chart.data.datasets[0].data = values;\n            window.chart.options.title.text = [data.title, \"\"];\n        }\n\n        window.absolutnew = [];\n        window.percentnew = [];\n\n        $.map(data.letters, function(letter) {\n            window.absolutnew.push(data.newdist[letter].count);\n            window.percentnew.push(data.newdist[letter].percentage);\n        });\n\n        instance.coverage(data);\n        var newvalues = (window.mode == 1) ? window.percentnew : window.absolutnew;\n        window.chart.data.datasets[1].data = newvalues;\n        window.chart.update();\n\n        return true;\n    };\n\n    /*\n     * validate() checks if the current boundaries given in the form data are\n     * syntactically and semantically correct and displays warnings based on this\n     *\n     * @return true if everything's allright, false on detected error\n     */\n    Gradedist.prototype.validate = function() {\n\n        var error = false;\n\n        var errdec = false;\n        var errint = false;\n        var errpre = false;\n        var erremp = false;\n\n        var errdecdiv = $('#b_decimals').first();\n        var errintdiv = $('#b_interval').first();\n        var errprediv = $('#b_predecessor').first();\n\n        var decimals = /^\\d+([.]\\d{1,2})?$/;\n        var pre = 100.01;\n\n        $.each(window.boundaries, function(id, boundary) {\n            var value = boundary.value.replace(/,/g, '.');\n            if (value != '') {\n                if (!decimals.test(value)) {\n                    errdec = true;\n                }\n                if (Number(value) > 100) {\n                    errint = true;\n                }\n                if (Number(value) >= Number(pre)) {\n                    errpre = true;\n                }\n\n                pre = value;\n            } else {\n                erremp = true;\n            }\n        });\n\n        if (errdec) {\n            if (!errdecdiv.length) {\n                str.get_string('decimals', 'gradereport_gradedist').done(function(s) {\n                    $('#boundary_error_container').first().append('<div class=\"b_error\" id=\"b_decimals\"><span>'\n                        + s + '</span></div>');\n                });\n            }\n            error = true;\n        } else if (errdecdiv.length) {\n            errdecdiv.remove();\n        }\n        if (errint) {\n            if (!errintdiv.length) {\n                str.get_string('interval', 'gradereport_gradedist').done(function(s) {\n                    $('#boundary_error_container').first().append('<div class=\"b_error\" id=\"b_interval\"><span>'\n                        + s + '</span></div>');\n                });\n            }\n            error = true;\n        } else if (errintdiv.length) {\n            errintdiv.remove();\n        }\n        if (errpre) {\n            if (!errprediv.length) {\n                str.get_string('predecessor', 'gradereport_gradedist').done(function(s) {\n                    $('#boundary_error_container').first().append('<div class=\"b_error\" id=\"b_predecessor\"><span>'\n                        + s + '</span></div>');\n                });\n            }\n            error = true;\n        } else if (errprediv.length) {\n            errprediv.remove();\n        }\n\n        if (window.submit.length) {\n            window.submit.prop('disabled', error || erremp);\n        }\n\n        return !error;\n    };\n\n    /*\n     * coverage() determines how many grades are covered/not covered by\n     * the current forms grade distribution and displays this information\n     *\n     * @return true if everything's allright, false on detected error\n     */\n    Gradedist.prototype.coverage = function(data) {\n\n        var error = false;\n        var erremp = false;\n        var errcov = Number(data.newcoverage[0]) != 0;\n        var errcovdiv = $('#b_coverage').first();\n\n        $.each(window.boundaries, function(id, boundary) {\n            if (boundary.value == '') {\n                erremp = true;\n            }\n        });\n\n        if (!erremp && errcov) {\n            if (!errcovdiv.length) {\n                str.get_string('coverage', 'gradereport_gradedist').done(function(s) {\n                    $('#boundary_error_container').first().append('<div class=\"b_error\" id=\"b_coverage\"><span>'\n                        + s + '</span><span class=\"newcoverage\">'\n                        + data.newcoverage[0] + '/' + data.newcoverage[1] + '</span></div>');\n                });\n            }\n            error = true;\n        } else if (errcovdiv.length) {\n            errcovdiv.remove();\n        }\n\n        $('.actcoverage').html(data.actcoverage[0] + '/' + data.actcoverage[1] + ' (' + data.actcoverage[2] + '%)');\n        $('.newcoverage').html(data.newcoverage[0] + '/' + data.newcoverage[1] + ' (' + data.newcoverage[2] + '%)');\n\n        return !error;\n    };\n\n    Gradedist.prototype.initChart = function(initdata, letters) {\n\n        var tofetch = [\n            {key: 'gradeletter', component: 'gradereport_gradedist'},\n            {key: 'absolut', component: 'gradereport_gradedist'},\n            {key: 'percent', component: 'gradereport_gradedist'},\n            {key: 'printchart', component: 'gradereport_gradedist'},\n            {key: 'downloadpng', component: 'gradereport_gradedist'},\n            {key: 'downloadjpeg', component: 'gradereport_gradedist'},\n            {key: 'downloadpdf', component: 'gradereport_gradedist'},\n            {key: 'downloadsvg', component: 'gradereport_gradedist'},\n            {key: 'downloadjpeg', component: 'gradereport_gradedist'},\n            {key: 'contextbuttontitle', component: 'gradereport_gradedist'},\n        ];\n\n\n\n        str.get_strings(tofetch).done(function(s) {\n            window.chart = new window.Chart($(\"#chart_container\"), {\n                type: 'bar',\n                data: {\n                    labels: letters,\n                    datasets: [{\n                        data: window.absolut,\n                        backgroundColor: '#990000',\n                        borderWidth: 1,\n                    },\n                    {\n                        data: window.absolutnew,\n                        backgroundColor: '#33cc33',\n                        borderWidth: 1\n                    }]\n                },\n                options: {\n                    title: {\n                        display: true,\n                        text: [initdata.title, \"\"],\n                        fontSize: 18,\n                        fontStyle: 'normal'\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true,\n                                //maxTicksLimit: 6,\n                                padding: 10\n                            },\n                            scaleLabel: {\n                                display: true,\n                                labelString: s[1],\n                                fontColor: \"#4d759e\",\n                                fontSize: 15\n                            },\n                            gridLines: {\n                                drawBorder: false,\n                                lineWidth: 0.3,\n                                color: '#000000',\n                                zeroLineColor: '#c0e0d0'\n                            },\n                        }],\n                        xAxes: [{\n                            scaleLabel: {\n                                display: true,\n                                labelString: s[0],\n                                fontColor: \"#4d759e\",\n                                fontSize: 15\n                            },\n                            gridLines: {\n                                drawOnChartArea: false,\n\n                            },\n                            barPercentage: 0.8\n                        }]\n                    },\n                    legend: {\n                        display: false\n                    },\n                    plugins: {\n                        datalabels: {\n                            anchor: 'end',\n                            align: 'top',\n                            color: '#000000'\n                        }\n                    }\n                }\n            });\n        });\n    };\n\n    var instance = new Gradedist();\n\n    /*\n     * initializer(config) prepares settings form for JS-functionality\n     */\n    instance.initializer = function(config) {\n\n        log.info('Initialize settings JS', 'gradedist');\n\n        require(['canvastoBlob']); // load canvastoBlob\n        var initdata = config.data;\n\n        window.mode = 0;\n        var letters = initdata.letters;\n\n        window.absolut = [];\n        window.percent = [];\n        window.absolutnew = [];\n        window.percentnew = [];\n\n        var submitSelector = \"#id_submitbutton\";\n        window.submit = $(submitSelector);\n        if (window.submit.length) {\n            window.submit.prop('disabled', true);\n        }\n\n        $.map(letters, function(letter) {\n            window.absolut.push(initdata.actdist[letter].count);\n            window.percent.push(initdata.actdist[letter].percentage);\n            window.absolutnew.push(initdata.newdist[letter].count);\n            window.percentnew.push(initdata.newdist[letter].percentage);\n        });\n\n        window.chart = [];\n\n        require(['ChartDataLabels'], function() {\n            window.Chart.plugins.register({\n                beforeDraw: function(chartInstance) {\n                    var ctx = chartInstance.chart.ctx;\n                    ctx.fillStyle = \"white\";\n                    ctx.fillRect(0, 0, chartInstance.chart.width, chartInstance.chart.height);\n                }\n            });\n            instance.initChart(initdata, letters);\n        });\n\n        var uri = M.cfg.wwwroot + '/grade/report/gradedist/ajax_handler.php?id=' + initdata.courseid;\n\n        var cfg = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n            },\n            complete: function(arg1) { instance.update(arg1); },\n            url: uri\n        };\n\n        var gradeitemsSelector = \"#id_gradeitem\";\n        var gradeitems = $(gradeitemsSelector).first();\n        gradeitems.change(instance, function() {\n            var success = $('.alert-success');\n            if (success) {\n                success.remove();\n            }\n            cfg.data = $('#letterform').serialize() + \"&updateall=1\";\n            $.ajax(cfg);\n        });\n\n        var coursegroupsSelector = \"#id_coursegroup\";\n        var coursegroups = $(coursegroupsSelector).first();\n        if (coursegroups) {\n            coursegroups.change(instance, function() {\n                var success = $('.alert-success');\n                if (success) {\n                    success.remove();\n                }\n                $('#id_coursegrouping').first().prop('value', '0');\n                cfg.data = $('#letterform').serialize() + \"&updateall=1\";\n                $.ajax(cfg);\n            });\n        }\n\n        var coursegroupingsSelector = \"#id_coursegrouping\";\n        var coursegroupings = $(coursegroupingsSelector).first();\n        if (coursegroupings) {\n            coursegroupings.change(instance, function() {\n                var success = $('.alert-success');\n                if (success) {\n                    success.remove();\n                }\n                $('#id_coursegroup').first().prop('value', '0');\n                cfg.data = $('#letterform').serialize() + \"&updateall=1\";\n                $.ajax(cfg);\n            });\n        }\n\n        window.boundaries = $('.gradeboundaries_new input[type=text], #fgroup_id_grp_gradeboundaries_new input[type=text]');\n        window.boundaries.change(instance, function() {\n            var notifications =\n                    $('#page-grade-report-gradedist-index .notifyproblem, #page-grade-report-gradedist-index .notifysuccess');\n            if (notifications) {\n                notifications.remove();\n            }\n            var success = $('.alert-success');\n            if (success) {\n                success.remove();\n            }\n            if (instance.validate()) {\n                cfg.data = $('#letterform').serialize() + \"&updateall=1\";\n                $.ajax(cfg);\n            }\n        });\n\n        var desc = $('input[name^=\"grp_description\"]');\n        desc.change(instance, function() {\n            window.mode = this.value;\n            var values, values_new;\n\n            var s_y;\n            var ext_y;\n            if (window.mode == 1) {\n                values = window.percent;\n                values_new = window.percentnew;\n                s_y = 'percent';\n                ext_y = 100;\n            } else {\n                values = window.absolut;\n                values_new = window.absolutnew;\n                s_y = 'absolut';\n                ext_y = Math.max(Math.max.apply(this, window.absolut),Math.max.apply(this, window.absolutnew));\n            }\n\n            str.get_string(s_y, 'gradereport_gradedist').done(function(s) {\n                window.chart.options.scales.yAxes[0].scaleLabel.labelString = s;\n                window.chart.options.scales.yAxes[0].ticks.suggestedMax = ext_y;\n\n                window.chart.data.datasets[0].data = values;\n                window.chart.data.datasets[1].data = values_new;\n                window.chart.update();\n            });\n        });\n\n        var cols = $('#id_grp_columns_actualcolumns, #id_grp_columns_newcolumns');\n        cols.click(instance, function() {\n            var column = (this.id === 'id_grp_columns_actualcolumns') ? 0 : 1;\n            if (this.checked) {\n                window.chart.data.datasets[column].hidden = false;\n                window.chart.update();\n            } else {\n                window.chart.data.datasets[column].hidden = true;\n                window.chart.update();\n            }\n        });\n\n        var toprint = $('.grgd_print');\n        var $printframe = $('#printframe');\n        toprint.click(instance, function() {\n            var imagePath = document.getElementById('chart_container').toDataURL(\"image/png\");\n            var content = '<!DOCTYPE html>' +\n                  '<html>' +\n                  '<head><title></title><script></script></head>' +\n                  '<body onload=\"\">' +\n                  '<img src=\"' + imagePath + '\" style=\"width: 100%;\" />' +\n                  '</body>' +\n                  '</html>';\n            $printframe[0].contentWindow.document.write(content);\n            setTimeout(function() { $printframe[0].contentWindow.print();}, 200);\n        });\n\n\n        var topdf = $('.grgd_pdf');\n        topdf.click(instance, function() {\n            require(['html2pdf'], function(html2pdf) {\n                var container = document.getElementById('chart_container');\n                var positionInfo = container.getBoundingClientRect();\n                var contheight = positionInfo.height;\n                var contwidth = positionInfo.width;\n                var opt = {\n                  margin:       1,\n                  filename:     'chart.pdf',\n                  image:        { type: 'png'},\n                  pagebreak:    { mode: 'avoid-all' },\n                  html2canvas:  { backgroundColor: '#ffffff'},\n                  jsPDF:        { unit: 'px', format: [contwidth,contheight*1.1], orientation: 'landscape' }\n                };\n                html2pdf(container, opt);\n            });\n        });\n\n        var topng = $('.grgd_png');\n        topng.click(instance, function() {\n            // Cross-browser compatibility (with IE 11) required.\n            require(['filesaver'],\n                function(saveAs) {\n                // Cross-browser compatibility (with IE 11) required.\n                $(\"#chart_container\").get(0).toBlob(function(blob) {\n                    saveAs(blob, \"chart.png\");\n                });\n            });\n        });\n\n        var tojpg = $('.grgd_jpg');\n        tojpg.click(instance, function() {\n            require(['filesaver'],\n                function(saveAs) {\n                // Cross-browser compatibility (with IE 11) required.\n                $(\"#chart_container\").get(0).toBlob(function(blob) {\n                    saveAs(blob, \"chart.jpg\");\n                }, \"image/jpeg\");\n            });\n        });\n\n        var toxlsx = $('.grgd_xlsx');\n        toxlsx.click(instance, function() {\n            $(\"input[name='grp_export']\").val('xlsx');\n            $('#letterform').submit();\n        });\n\n        var toods = $('.grgd_ods');\n        toods.click(instance, function() {\n            $(\"input[name='grp_export']\").val('ods');\n            $('#letterform').submit();\n        });\n\n        var tocsv = $('.grgd_csv');\n        tocsv.click(instance, function() {\n            $(\"input[name='grp_export']\").val('csv');\n            $('#letterform').submit();\n        });\n\n        $('#letterform input[type=\"submit\"]').click(function() {\n            setTimeout(function() {instance.validate();}, 1000);\n        });\n\n        instance.validate();\n    };\n\n    return instance;\n});\n"],"names":["define","$","log","str","Gradedist","prototype","update","o","data","JSON","parse","responseText","updateall","window","absolut","percent","map","letters","letter","push","actdist","count","percentage","values","mode","chart","datasets","options","title","text","absolutnew","percentnew","newdist","instance","coverage","newvalues","validate","error","errdec","errint","errpre","erremp","errdecdiv","first","errintdiv","errprediv","decimals","pre","each","boundaries","id","boundary","value","replace","test","Number","length","get_string","done","s","append","remove","submit","prop","errcov","newcoverage","errcovdiv","html","actcoverage","initChart","initdata","get_strings","key","component","Chart","type","labels","backgroundColor","borderWidth","display","fontSize","fontStyle","scales","yAxes","ticks","beginAtZero","padding","scaleLabel","labelString","fontColor","gridLines","drawBorder","lineWidth","color","zeroLineColor","xAxes","drawOnChartArea","barPercentage","legend","plugins","datalabels","anchor","align","initializer","config","info","require","register","beforeDraw","chartInstance","ctx","fillStyle","fillRect","width","height","cfg","method","headers","complete","arg1","url","M","wwwroot","courseid","change","success","serialize","ajax","coursegroups","coursegroupings","notifications","values_new","s_y","ext_y","this","Math","max","apply","suggestedMax","click","column","checked","hidden","toprint","$printframe","content","document","getElementById","toDataURL","contentWindow","write","setTimeout","print","html2pdf","container","positionInfo","getBoundingClientRect","contheight","margin","filename","image","pagebreak","html2canvas","jsPDF","unit","format","orientation","saveAs","get","toBlob","blob","val"],"mappings":";;;;;;;;AA4BAA,yCAAO,CAAC,SAAU,WAAY,WAAY,iCAC1C,SAASC,EAAGC,IAAKC,SAKTC,UAAY,aAQhBA,UAAUC,UAAUC,OAAS,SAASC,OAE9BC,KAAOC,KAAKC,MAAMH,EAAEI,iBAEF,GAAlBH,KAAKI,UAAgB,CACrBC,OAAOC,QAAU,GACjBD,OAAOE,QAAU,GAEjBd,EAAEe,IAAIR,KAAKS,SAAS,SAASC,QACzBL,OAAOC,QAAQK,KAAKX,KAAKY,QAAQF,QAAQG,OACzCR,OAAOE,QAAQI,KAAKX,KAAKY,QAAQF,QAAQI,mBAGzCC,OAAyB,GAAfV,OAAOW,KAAaX,OAAOE,QAAUF,OAAOC,QAE1DD,OAAOY,MAAMjB,KAAKkB,SAAS,GAAGlB,KAAOe,OACrCV,OAAOY,MAAME,QAAQC,MAAMC,KAAO,CAACrB,KAAKoB,MAAO,IAGnDf,OAAOiB,WAAa,GACpBjB,OAAOkB,WAAa,GAEpB9B,EAAEe,IAAIR,KAAKS,SAAS,SAASC,QACzBL,OAAOiB,WAAWX,KAAKX,KAAKwB,QAAQd,QAAQG,OAC5CR,OAAOkB,WAAWZ,KAAKX,KAAKwB,QAAQd,QAAQI,eAGhDW,SAASC,SAAS1B,UACd2B,UAA4B,GAAftB,OAAOW,KAAaX,OAAOkB,WAAalB,OAAOiB,kBAChEjB,OAAOY,MAAMjB,KAAKkB,SAAS,GAAGlB,KAAO2B,UACrCtB,OAAOY,MAAMnB,UAEN,GASXF,UAAUC,UAAU+B,SAAW,eAEvBC,OAAQ,EAERC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EAETC,UAAYzC,EAAE,eAAe0C,QAC7BC,UAAY3C,EAAE,eAAe0C,QAC7BE,UAAY5C,EAAE,kBAAkB0C,QAEhCG,SAAW,qBACXC,IAAM,cAEV9C,EAAE+C,KAAKnC,OAAOoC,YAAY,SAASC,GAAIC,cAC/BC,MAAQD,SAASC,MAAMC,QAAQ,KAAM,KAC5B,IAATD,OACKN,SAASQ,KAAKF,SACfd,QAAS,GAETiB,OAAOH,OAAS,MAChBb,QAAS,GAETgB,OAAOH,QAAUG,OAAOR,OACxBP,QAAS,GAGbO,IAAMK,OAENX,QAAS,KAIbH,QACKI,UAAUc,QACXrD,IAAIsD,WAAW,WAAY,yBAAyBC,MAAK,SAASC,GAC9D1D,EAAE,6BAA6B0C,QAAQiB,OAAO,8CACxCD,EAAI,oBAGlBtB,OAAQ,GACDK,UAAUc,QACjBd,UAAUmB,SAEVtB,QACKK,UAAUY,QACXrD,IAAIsD,WAAW,WAAY,yBAAyBC,MAAK,SAASC,GAC9D1D,EAAE,6BAA6B0C,QAAQiB,OAAO,8CACxCD,EAAI,oBAGlBtB,OAAQ,GACDO,UAAUY,QACjBZ,UAAUiB,SAEVrB,QACKK,UAAUW,QACXrD,IAAIsD,WAAW,cAAe,yBAAyBC,MAAK,SAASC,GACjE1D,EAAE,6BAA6B0C,QAAQiB,OAAO,iDACxCD,EAAI,oBAGlBtB,OAAQ,GACDQ,UAAUW,QACjBX,UAAUgB,SAGVhD,OAAOiD,OAAON,QACd3C,OAAOiD,OAAOC,KAAK,WAAY1B,OAASI,SAGpCJ,OASZjC,UAAUC,UAAU6B,SAAW,SAAS1B,UAEhC6B,OAAQ,EACRI,QAAS,EACTuB,OAAwC,GAA/BT,OAAO/C,KAAKyD,YAAY,IACjCC,UAAYjE,EAAE,eAAe0C,eAEjC1C,EAAE+C,KAAKnC,OAAOoC,YAAY,SAASC,GAAIC,UACb,IAAlBA,SAASC,QACTX,QAAS,OAIZA,QAAUuB,QACNE,UAAUV,QACXrD,IAAIsD,WAAW,WAAY,yBAAyBC,MAAK,SAASC,GAC9D1D,EAAE,6BAA6B0C,QAAQiB,OAAO,8CACxCD,EAAI,oCACJnD,KAAKyD,YAAY,GAAK,IAAMzD,KAAKyD,YAAY,GAAK,oBAGhE5B,OAAQ,GACD6B,UAAUV,QACjBU,UAAUL,SAGd5D,EAAE,gBAAgBkE,KAAK3D,KAAK4D,YAAY,GAAK,IAAM5D,KAAK4D,YAAY,GAAK,KAAO5D,KAAK4D,YAAY,GAAK,MACtGnE,EAAE,gBAAgBkE,KAAK3D,KAAKyD,YAAY,GAAK,IAAMzD,KAAKyD,YAAY,GAAK,KAAOzD,KAAKyD,YAAY,GAAK,OAE9F5B,OAGZjC,UAAUC,UAAUgE,UAAY,SAASC,SAAUrD,SAiB/Cd,IAAIoE,YAfU,CACV,CAACC,IAAK,cAAeC,UAAW,yBAChC,CAACD,IAAK,UAAWC,UAAW,yBAC5B,CAACD,IAAK,UAAWC,UAAW,yBAC5B,CAACD,IAAK,aAAcC,UAAW,yBAC/B,CAACD,IAAK,cAAeC,UAAW,yBAChC,CAACD,IAAK,eAAgBC,UAAW,yBACjC,CAACD,IAAK,cAAeC,UAAW,yBAChC,CAACD,IAAK,cAAeC,UAAW,yBAChC,CAACD,IAAK,eAAgBC,UAAW,yBACjC,CAACD,IAAK,qBAAsBC,UAAW,2BAKlBf,MAAK,SAASC,GACnC9C,OAAOY,MAAQ,IAAIZ,OAAO6D,MAAMzE,EAAE,oBAAqB,CACnD0E,KAAM,MACNnE,KAAM,CACFoE,OAAQ3D,QACRS,SAAU,CAAC,CACPlB,KAAMK,OAAOC,QACb+D,gBAAiB,UACjBC,YAAa,GAEjB,CACItE,KAAMK,OAAOiB,WACb+C,gBAAiB,UACjBC,YAAa,KAGrBnD,QAAS,CACLC,MAAO,CACHmD,SAAS,EACTlD,KAAM,CAACyC,SAAS1C,MAAO,IACvBoD,SAAU,GACVC,UAAW,UAEfC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,EAEbC,QAAS,IAEbC,WAAY,CACRR,SAAS,EACTS,YAAa7B,EAAE,GACf8B,UAAW,UACXT,SAAU,IAEdU,UAAW,CACPC,YAAY,EACZC,UAAW,GACXC,MAAO,UACPC,cAAe,aAGvBC,MAAO,CAAC,CACJR,WAAY,CACRR,SAAS,EACTS,YAAa7B,EAAE,GACf8B,UAAW,UACXT,SAAU,IAEdU,UAAW,CACPM,iBAAiB,GAGrBC,cAAe,MAGvBC,OAAQ,CACJnB,SAAS,GAEboB,QAAS,CACLC,WAAY,CACRC,OAAQ,MACRC,MAAO,MACPT,MAAO,uBAQ3B5D,SAAW,IAAI7B,iBAKnB6B,SAASsE,YAAc,SAASC,QAE5BtG,IAAIuG,KAAK,yBAA0B,aAEnCC,QAAQ,CAAC,qBACLpC,SAAWkC,OAAOhG,KAEtBK,OAAOW,KAAO,MACVP,QAAUqD,SAASrD,QAEvBJ,OAAOC,QAAU,GACjBD,OAAOE,QAAU,GACjBF,OAAOiB,WAAa,GACpBjB,OAAOkB,WAAa,GAGpBlB,OAAOiD,OAAS7D,EADK,oBAEjBY,OAAOiD,OAAON,QACd3C,OAAOiD,OAAOC,KAAK,YAAY,GAGnC9D,EAAEe,IAAIC,SAAS,SAASC,QACpBL,OAAOC,QAAQK,KAAKmD,SAASlD,QAAQF,QAAQG,OAC7CR,OAAOE,QAAQI,KAAKmD,SAASlD,QAAQF,QAAQI,YAC7CT,OAAOiB,WAAWX,KAAKmD,SAAStC,QAAQd,QAAQG,OAChDR,OAAOkB,WAAWZ,KAAKmD,SAAStC,QAAQd,QAAQI,eAGpDT,OAAOY,MAAQ,GAEfiF,QAAQ,CAAC,oBAAoB,WACzB7F,OAAO6D,MAAMyB,QAAQQ,SAAS,CAC1BC,WAAY,SAASC,mBACbC,IAAMD,cAAcpF,MAAMqF,IAC9BA,IAAIC,UAAY,QAChBD,IAAIE,SAAS,EAAG,EAAGH,cAAcpF,MAAMwF,MAAOJ,cAAcpF,MAAMyF,WAG1EjF,SAASoC,UAAUC,SAAUrD,gBAK7BkG,IAAM,CACNC,OAAQ,OACRC,QAAS,gBACW,oDAEpBC,SAAU,SAASC,MAAQtF,SAAS3B,OAAOiH,OAC3CC,IARMC,EAAEN,IAAIO,QAAU,+CAAiDpD,SAASqD,UAYnE1H,EADQ,iBACc0C,QAC5BiF,OAAO3F,UAAU,eACpB4F,QAAU5H,EAAE,kBACZ4H,SACAA,QAAQhE,SAEZsD,IAAI3G,KAAOP,EAAE,eAAe6H,YAAc,eAC1C7H,EAAE8H,KAAKZ,YAIPa,aAAe/H,EADQ,mBACgB0C,QACvCqF,cACAA,aAAaJ,OAAO3F,UAAU,eACtB4F,QAAU5H,EAAE,kBACZ4H,SACAA,QAAQhE,SAEZ5D,EAAE,sBAAsB0C,QAAQoB,KAAK,QAAS,KAC9CoD,IAAI3G,KAAOP,EAAE,eAAe6H,YAAc,eAC1C7H,EAAE8H,KAAKZ,YAKXc,gBAAkBhI,EADQ,sBACmB0C,QAC7CsF,iBACAA,gBAAgBL,OAAO3F,UAAU,eACzB4F,QAAU5H,EAAE,kBACZ4H,SACAA,QAAQhE,SAEZ5D,EAAE,mBAAmB0C,QAAQoB,KAAK,QAAS,KAC3CoD,IAAI3G,KAAOP,EAAE,eAAe6H,YAAc,eAC1C7H,EAAE8H,KAAKZ,QAIftG,OAAOoC,WAAahD,EAAE,8FACtBY,OAAOoC,WAAW2E,OAAO3F,UAAU,eAC3BiG,cACIjI,EAAE,wGACNiI,eACAA,cAAcrE,aAEdgE,QAAU5H,EAAE,kBACZ4H,SACAA,QAAQhE,SAER5B,SAASG,aACT+E,IAAI3G,KAAOP,EAAE,eAAe6H,YAAc,eAC1C7H,EAAE8H,KAAKZ,SAIJlH,EAAE,kCACR2H,OAAO3F,UAAU,eAEdV,OAAQ4G,WAERC,IACAC,MAJJxH,OAAOW,KAAO8G,KAAKlF,MAKA,GAAfvC,OAAOW,MACPD,OAASV,OAAOE,QAChBoH,WAAatH,OAAOkB,WACpBqG,IAAM,UACNC,MAAQ,MAER9G,OAASV,OAAOC,QAChBqH,WAAatH,OAAOiB,WACpBsG,IAAM,UACNC,MAAQE,KAAKC,IAAID,KAAKC,IAAIC,MAAMH,KAAMzH,OAAOC,SAASyH,KAAKC,IAAIC,MAAMH,KAAMzH,OAAOiB,cAGtF3B,IAAIsD,WAAW2E,IAAK,yBAAyB1E,MAAK,SAASC,GACvD9C,OAAOY,MAAME,QAAQuD,OAAOC,MAAM,GAAGI,WAAWC,YAAc7B,EAC9D9C,OAAOY,MAAME,QAAQuD,OAAOC,MAAM,GAAGC,MAAMsD,aAAeL,MAE1DxH,OAAOY,MAAMjB,KAAKkB,SAAS,GAAGlB,KAAOe,OACrCV,OAAOY,MAAMjB,KAAKkB,SAAS,GAAGlB,KAAO2H,WACrCtH,OAAOY,MAAMnB,eAIVL,EAAE,6DACR0I,MAAM1G,UAAU,eACb2G,OAAsB,iCAAZN,KAAKpF,GAAyC,EAAI,EAC5DoF,KAAKO,SACLhI,OAAOY,MAAMjB,KAAKkB,SAASkH,QAAQE,QAAS,EAC5CjI,OAAOY,MAAMnB,WAEbO,OAAOY,MAAMjB,KAAKkB,SAASkH,QAAQE,QAAS,EAC5CjI,OAAOY,MAAMnB,iBAIjByI,QAAU9I,EAAE,eACZ+I,YAAc/I,EAAE,eACpB8I,QAAQJ,MAAM1G,UAAU,eAEhBgH,QAAU,gGADEC,SAASC,eAAe,mBAAmBC,UAAU,aACvD,0CAOdJ,YAAY,GAAGK,cAAcH,SAASI,MAAML,SAC5CM,YAAW,WAAaP,YAAY,GAAGK,cAAcG,UAAW,QAIxDvJ,EAAE,aACR0I,MAAM1G,UAAU,WAClByE,QAAQ,CAAC,aAAa,SAAS+C,cACvBC,UAAYR,SAASC,eAAe,mBACpCQ,aAAeD,UAAUE,wBACzBC,WAAaF,aAAazC,OAU9BuC,SAASC,UARC,CACRI,OAAc,EACdC,SAAc,YACdC,MAAc,CAAErF,KAAM,OACtBsF,UAAc,CAAEzI,KAAM,aACtB0I,YAAc,CAAErF,gBAAiB,WACjCsF,MAAc,CAAEC,KAAM,KAAMC,OAAQ,CAPtBV,aAAa1C,MAO+B,IAAX4C,YAAiBS,YAAa,qBAM3ErK,EAAE,aACR0I,MAAM1G,UAAU,WAElByE,QAAQ,CAAC,cACL,SAAS6D,QAETtK,EAAE,oBAAoBuK,IAAI,GAAGC,QAAO,SAASC,MACzCH,OAAOG,KAAM,sBAKbzK,EAAE,aACR0I,MAAM1G,UAAU,WAClByE,QAAQ,CAAC,cACL,SAAS6D,QAETtK,EAAE,oBAAoBuK,IAAI,GAAGC,QAAO,SAASC,MACzCH,OAAOG,KAAM,eACd,oBAIEzK,EAAE,cACR0I,MAAM1G,UAAU,WACnBhC,EAAE,4BAA4B0K,IAAI,QAClC1K,EAAE,eAAe6D,YAGT7D,EAAE,aACR0I,MAAM1G,UAAU,WAClBhC,EAAE,4BAA4B0K,IAAI,OAClC1K,EAAE,eAAe6D,YAGT7D,EAAE,aACR0I,MAAM1G,UAAU,WAClBhC,EAAE,4BAA4B0K,IAAI,OAClC1K,EAAE,eAAe6D,YAGrB7D,EAAE,oCAAoC0I,OAAM,WACxCY,YAAW,WAAYtH,SAASG,aAAc,QAGlDH,SAASG,YAGNH"}